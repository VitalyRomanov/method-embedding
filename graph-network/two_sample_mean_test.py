import numpy as np

# #fname
# sample_1 = np.array([
# 0.7698,	0.7535,	0.7624,	0.7447,	0.7602
# ])
# S2 = np.array([
# [0.7094, 0.7183, 0.7214, 0.7139, 0.7280],
# [0.7643, 0.7569, 0.7603, 0.7623, 0.7647],
# [0.7126, 0.7039, 0.7000, 0.7011, 0.7117],
# [0.7607, 0.7692, 0.7620, 0.7650, 0.7658],
# [0.7630, 0.7541, 0.7509, 0.7551, 0.7558],
# [0.7587, 0.7529, 0.7553, 0.7593, 0.7664]
# ])

#varuse
sample_1 = np.array([
0.7507,	0.7760,	0.7653,	0.7621,	0.7677
])
S2 = np.array([
[0.6332, 0.6292, 0.6406, 0.6351, 0.6522],
[0.7720, 0.7635, 0.7633, 0.7677, 0.7535],
[0.7583, 0.7504, 0.7464, 0.7289, 0.7464],
[0.7630, 0.7579, 0.7612, 0.7586, 0.7677],
[0.7614, 0.7523, 0.7451, 0.7563, 0.7469],
[0.7407, 0.7521, 0.7610, 0.7596, 0.7366]
])

# apicall
sample_1 = np.array([
0.7848,	0.7752,	0.7772,	0.7788,	0.7806
])
S2 = np.array([
[0.7330, 0.7314, 0.7130, 0.7275, 0.7058],
[0.7872, 0.7848, 0.7831, 0.7846, 0.7817],
[0.7899, 0.7858, 0.7814, 0.7867, 0.7777],
[0.7633, 0.7817, 0.7767, 0.7809, 0.7702],
[0.7867, 0.7815, 0.7829, 0.7902, 0.7793],
[0.7872, 0.7762, 0.7827, 0.7761, 0.7797]
])

for sample_2 in S2:
    m1 = sample_1.mean()
    m2 = sample_2.mean()
    s1 = sample_1.var()
    s2 = sample_2.var()
    N1 = sample_1.size
    N2 = sample_2.size
    # alpha = 0.05
    T_crit = 1.9673

    T = (m1 - m2) / np.sqrt(s1/N1 + s2/N2)

    if np.abs(T) < T_crit:
        print("Equal")
    else:
        print("Not equal")